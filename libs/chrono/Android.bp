cc_library_headers {
    name: "libboost_chrono_headers",
    header_libs: [
        "libboost_assert_headers",
        "libboost_config_headers",
        "libboost_core_headers",
        "libboost_integer_headers",
        "libboost_mpl_headers",
        "libboost_predef_headers",
        "libboost_preprocessor_headers",
        "libboost_ratio_headers",
        "libboost_static_assert_headers",
        "libboost_system_headers",
        "libboost_throw_exception_headers",
        "libboost_type_traits_headers",
        "libboost_utility_headers",
    ],
    export_header_lib_headers: [
        "libboost_assert_headers",
        "libboost_config_headers",
        "libboost_core_headers",
        "libboost_integer_headers",
        "libboost_mpl_headers",
        "libboost_predef_headers",
        "libboost_preprocessor_headers",
        "libboost_ratio_headers",
        "libboost_static_assert_headers",
        "libboost_system_headers",
        "libboost_throw_exception_headers",
        "libboost_type_traits_headers",
        "libboost_utility_headers",
    ],
    export_include_dirs: ["include"],
}

cc_library_shared {
    name: "libboost_chrono",

    header_libs: [ "libboost_chrono_headers" ],
    srcs: [
        "src/chrono.cpp",
        "src/process_cpu_clocks.cpp",
        "src/thread_clock.cpp",
    ],

    shared_libs: [
        "libboost_system",
    ],

    // By default `BOOST_CHRONO_PROVIDE_HYBRID_ERROR_HANDLING` is defined.
    cppflags: [
        "-std=c++11",
        "-stdlib=libc++",
        "-Wextra",
        "-pedantic",
        "-Wno-long-long",
        "-Wno-variadic-macros",
        "-DBOOST_CHRONO_DONT_PROVIDE_HYBRID_ERROR_HANDLING",
    ],

    cflags: [
        "-Wall",
        "-Werror",
    ],
}
